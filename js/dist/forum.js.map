{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@clarkwinkelmann/anonymous-posting/webpack/bootstrap","webpack://@clarkwinkelmann/anonymous-posting/webpack/runtime/compat get default export","webpack://@clarkwinkelmann/anonymous-posting/webpack/runtime/define property getters","webpack://@clarkwinkelmann/anonymous-posting/webpack/runtime/hasOwnProperty shorthand","webpack://@clarkwinkelmann/anonymous-posting/webpack/runtime/make namespace object","webpack://@clarkwinkelmann/anonymous-posting/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/app']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['common/extend']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['common/utils/humanTime']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['common/components/Link']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['common/components/Switch']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['common/Model']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['common/models/Post']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/utils/DiscussionControls']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/utils/PostControls']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/components/CommentPost']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/components/Composer']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/components/DiscussionComposer']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/components/ReplyComposer']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/components/PostUser']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/components/ReplyPlaceholder']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/components/TerminalPost']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/components/PostPreview']\"","webpack://@clarkwinkelmann/anonymous-posting/external root \"flarum.core.compat['forum/components/PostsUserPage']\"","webpack://@clarkwinkelmann/anonymous-posting/./src/forum/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/humanTime'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Link'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Switch'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Post'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/DiscussionControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/PostControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/CommentPost'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Composer'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionComposer'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/ReplyComposer'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/PostUser'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionListItem'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/ReplyPlaceholder'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/TerminalPost'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/PostPreview'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/PostsUserPage'];","import app from 'flarum/forum/app';\r\nimport {extend, override} from 'flarum/common/extend';\r\nimport humanTime from 'flarum/common/utils/humanTime';\r\nimport extractText from 'flarum/common/utils/extractText';\r\nimport ItemList from 'flarum/common/utils/ItemList';\r\nimport icon from 'flarum/common/helpers/icon';\r\nimport Button from 'flarum/common/components/Button';\r\nimport Link from 'flarum/common/components/Link';\r\nimport Switch from 'flarum/common/components/Switch';\r\nimport Tooltip from 'flarum/common/components/Tooltip';\r\nimport Model from 'flarum/common/Model';\r\nimport Discussion from 'flarum/common/models/Discussion';\r\nimport Post from 'flarum/common/models/Post';\r\nimport Forum from 'flarum/common/models/Forum';\r\nimport User from 'flarum/common/models/User';\r\nimport DiscussionControls from 'flarum/forum/utils/DiscussionControls';\r\nimport PostControls from 'flarum/forum/utils/PostControls';\r\nimport CommentPost from 'flarum/forum/components/CommentPost';\r\nimport Composer from 'flarum/forum/components/Composer';\r\nimport DiscussionComposer from 'flarum/forum/components/DiscussionComposer';\r\nimport ReplyComposer from 'flarum/forum/components/ReplyComposer';\r\nimport PostUser from 'flarum/forum/components/PostUser';\r\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\r\nimport ReplyPlaceholder from 'flarum/forum/components/ReplyPlaceholder';\r\nimport TerminalPost from 'flarum/forum/components/TerminalPost';\r\nimport PostPreview from 'flarum/forum/components/PostPreview';\r\nimport PostsUserPage from 'flarum/forum/components/PostsUserPage';\r\n\r\nfunction extendComposerInit(this: DiscussionComposer | ReplyComposer) {\r\n    app.composer.fields!.isAnonymous = !!app.forum.attribute('defaultAnonymousPost');\r\n}\r\n\r\nfunction extendComposerHeaderItems(this: DiscussionComposer | ReplyComposer, items: ItemList<any>) {\r\n    if (!app.forum.attribute('canAnonymousSwitch')) {\r\n        return;\r\n    }\r\n\r\n    const helpText = app.translator.trans('clarkwinkelmann-anonymous-posting.forum.composerControls.anonymizeHelp');\r\n    const helpTextPosition = app.forum.attribute('anonymousHelpTextPosition');\r\n\r\n    items.add('anonymous-posting', Switch.component({\r\n        className: helpTextPosition === 'visible' ? 'AnonymousCheckbox--multiline' : '',\r\n        state: !!app.composer.fields!.isAnonymous,\r\n        onchange: (value: boolean) => {\r\n            app.composer.fields!.isAnonymous = value;\r\n        },\r\n    }, m('span.AnonymousCheckboxLabel', [\r\n        app.translator.trans('clarkwinkelmann-anonymous-posting.forum.composerControls.anonymize'),\r\n        helpTextPosition === 'tooltip' ? [' ', Tooltip.component({\r\n            text: helpText,\r\n        }, icon('fas fa-info-circle', {\r\n            className: 'AnonymousCheckboxInfo',\r\n        }))] : null,\r\n        helpTextPosition === 'visible' ? m('.helpText', helpText) : null,\r\n    ])), -10);\r\n}\r\n\r\nfunction extendComposerData(this: DiscussionComposer | ReplyComposer, data: any) {\r\n    data.isAnonymous = !!app.composer.fields!.isAnonymous;\r\n}\r\n\r\nfunction extendComposerView(this: DiscussionComposer | ReplyComposer, vdom: any) {\r\n    if (!app.composer.fields!.isAnonymous) {\r\n        return;\r\n    }\r\n\r\n    if (!vdom || !Array.isArray(vdom.children)) {\r\n        return;\r\n    }\r\n\r\n    // Loop through <ConfirmDocumentUnload> children\r\n    vdom.children.forEach(vdom => {\r\n        if (!vdom || !Array.isArray(vdom.children)) {\r\n            return;\r\n        }\r\n\r\n        // Loop through .ComposerBody children\r\n        vdom.children.forEach((child, index) => {\r\n            if (!child || !child.attrs || !child.attrs.className || child.attrs.className.indexOf('ComposerBody-avatar') === -1) {\r\n                return;\r\n            }\r\n            if (\"tags\" in app.composer.fields) {\r\n                // Check what type of composer is used\r\n                var composerType = \"Discussion\";\r\n                if (this instanceof ReplyComposer) {\r\n                    composerType = \"Post\";\r\n                }\r\n                vdom.children[index] = anonymousAvatar(app.forum, '.ComposerBody-avatar', composerType, app.composer.fields.tags);\r\n            } else {\r\n                vdom.children[index] = anonymousAvatar(app.forum, '.ComposerBody-avatar');\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction anonymousAvatar(post: Discussion | Post | Forum, className: string = '', composerType?: string, selectedTags?: []) {\r\n    const src = post.attribute('anonymousAvatarUrl');\r\n    const allTags = post.attribute('anonymousImposters');\r\n    var imageSrc = null;\r\n    if (selectedTags && allTags && composerType in allTags) {\r\n        var composerTypeTags = allTags[composerType];\r\n        for (const tag of selectedTags) {\r\n            if (tag.data.attributes.name in composerTypeTags) {\r\n                var foundMatchingTag = composerTypeTags[tag.data.attributes.name];\r\n                imageSrc = {\r\n                    url: foundMatchingTag.avatar_url,\r\n                    alt: foundMatchingTag.username,\r\n                };\r\n                break;\r\n            }\r\n        }; \r\n    }\r\n    if (imageSrc == null && src) {\r\n        imageSrc = {\r\n            url: src,\r\n            alt: app.translator.trans('clarkwinkelmann-anonymous-posting.lib.userMeta.username'),\r\n        };\r\n    }\r\n    if (imageSrc) {\r\n        if (imageSrc.url) {\r\n            return m('img.Avatar.Avatar--anonymous' + className, {\r\n                src: imageSrc.url,\r\n                alt: imageSrc.alt,\r\n            });\r\n        } else {\r\n            return m('span.Avatar ComposerBody-avatar' + className, {\r\n                alt: imageSrc.alt,\r\n                style: '--avatar-bg: #a0e5b3;',\r\n                text: 'U',\r\n            }, imageSrc.alt.charAt(0).toUpperCase());\r\n        }\r\n    }\r\n\r\n    return m('span.Avatar.Avatar--anonymous' + className, app.translator.trans('clarkwinkelmann-anonymous-posting.lib.userMeta.initials'));\r\n}\r\n\r\napp.initializers.add('anonymous-posting', () => {\r\n    extend(CommentPost.prototype, 'headerItems', function (items) {\r\n        const {post} = this.attrs;\r\n\r\n        if (!post.attribute('isAnonymous')) {\r\n            return;\r\n        }\r\n\r\n        items.setContent('user', m('.PostUser', m('h3', [\r\n            anonymousAvatar(post, '.PostUser-avatar'),\r\n            m('span.username', app.translator.trans('clarkwinkelmann-anonymous-posting.lib.userMeta.username')),\r\n        ])));\r\n\r\n        const anonymousUser = Model.hasOne<User>('anonymousUser').call(post);\r\n\r\n        if (!anonymousUser) {\r\n            if (!post.attribute('isAnonymousMe')) {\r\n                return;\r\n            }\r\n\r\n            let className = '.AnonymousPostPrivacyMine';\r\n            let tooltipText = app.translator.trans('clarkwinkelmann-anonymous-posting.forum.postPrivacy.mineHelp');\r\n            let labelText = app.translator.trans('clarkwinkelmann-anonymous-posting.forum.postPrivacy.mine');\r\n\r\n            if (app.current.matches(PostsUserPage)) {\r\n                className = '.AnonymousPostPrivacyProfile';\r\n                tooltipText = app.translator.trans('clarkwinkelmann-anonymous-posting.forum.postPrivacy.profileHelp');\r\n                labelText = app.translator.trans('clarkwinkelmann-anonymous-posting.forum.postPrivacy.profile');\r\n            }\r\n\r\n            items.add(\r\n                'anonymousUserPrivacy',\r\n                Tooltip.component({\r\n                    text: tooltipText,\r\n                }, m('span.AnonymousPostPrivacy' + className, labelText)),\r\n                90 // Just after the original user label\r\n            );\r\n\r\n            return;\r\n        }\r\n\r\n        // Provide an altered post object that the PostUser component can read the user from\r\n        const alteredPost = new Post({\r\n            ...post.data,\r\n            relationships: {\r\n                ...post.data.relationships,\r\n                user: post.data.relationships!.anonymousUser,\r\n            },\r\n        });\r\n\r\n        items.add(\r\n            'anonymousUser',\r\n            PostUser.component({\r\n                post: alteredPost,\r\n                cardVisible: this.cardVisible,\r\n                oncardshow: () => {\r\n                    this.cardVisible = true;\r\n                    m.redraw();\r\n                },\r\n                oncardhide: () => {\r\n                    this.cardVisible = false;\r\n                    m.redraw();\r\n                },\r\n            }),\r\n            90 // Just after the original user label\r\n        );\r\n    });\r\n\r\n    extend(ReplyPlaceholder.prototype, 'view', function (vdom0) {\r\n        if (!app.composer.fields!.isAnonymous) {\r\n            return;\r\n        }\r\n\r\n        if (!vdom0 || !Array.isArray(vdom0.children)) {\r\n            return;\r\n        }\r\n\r\n        // Loop through .Post children\r\n        vdom0.children.forEach(vdom1 => {\r\n            if (!vdom1 || !Array.isArray(vdom1.children)) {\r\n                return;\r\n            }\r\n\r\n            // Loop through .Post-header children\r\n            vdom1.children.forEach((vdom2) => {\r\n                if (!vdom2 || !Array.isArray(vdom2.children)) {\r\n                    return;\r\n                }\r\n\r\n                // Loop through .PostUser children\r\n                vdom2.children.forEach((vdom3, index3) => {\r\n                    if (!vdom3 || !Array.isArray(vdom3.children)) {\r\n                        return;\r\n                    }\r\n\r\n                    // Loop through <h3> children\r\n                    vdom3.children.forEach((child, index) => {\r\n                        if (!child || !child.attrs || !child.attrs.className) {\r\n                            return;\r\n                        }\r\n\r\n                        // Replace preview avatar\r\n                        if (child.attrs.className.indexOf('PostUser-avatar') !== -1) {\r\n                            vdom3.children[index] = anonymousAvatar(app.forum, '.PostUser-avatar');\r\n                        }\r\n\r\n                        // Replace preview username\r\n                        if (child.attrs.className === 'username') {\r\n                            child.text = app.translator.trans('clarkwinkelmann-anonymous-posting.lib.userMeta.username');\r\n                        }\r\n                    });\r\n\r\n                    // Remove ul.PostUser-badges which would show the actor's badges\r\n                    if (vdom3.attrs && vdom3.attrs.className && vdom3.attrs.className.indexOf('PostUser-badges') !== -1) {\r\n                        vdom2.children.splice(index3, 1);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    extend(DiscussionListItem.prototype, 'view', function (vdom) {\r\n        // @ts-ignore\r\n        const discussion = this.attrs.discussion as Discussion;\r\n\r\n        if (!discussion.attribute('isAnonymous')) {\r\n            return;\r\n        }\r\n\r\n        vdom.children.forEach(vdom => {\r\n            if (!vdom || !vdom.attrs || !vdom.attrs.className || vdom.attrs.className.indexOf('DiscussionListItem-content') === -1) {\r\n                return;\r\n            }\r\n\r\n            vdom.children.forEach(vdom => {\r\n                if (!vdom || vdom.tag !== Tooltip) {\r\n                    return;\r\n                }\r\n\r\n                vdom.attrs.text = app.translator.trans('core.forum.discussion_list.started_text', {\r\n                    username: app.translator.trans('clarkwinkelmann-anonymous-posting.lib.userMeta.username'),\r\n                    ago: humanTime(discussion.createdAt()),\r\n                });\r\n\r\n                vdom.children.forEach(vdom => {\r\n                    if (!vdom || vdom.tag !== Link) {\r\n                        return;\r\n                    }\r\n\r\n                    vdom.children = [\r\n                        anonymousAvatar(discussion),\r\n                    ];\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    extend(PostPreview.prototype, 'view', function (vdom) {\r\n        if (!this.attrs.post.attribute('isAnonymous')) {\r\n            return;\r\n        }\r\n\r\n        vdom.children.forEach(preview => {\r\n            if (!preview || !preview.attrs || !preview.attrs.className || preview.attrs.className.indexOf('PostPreview-content') === -1) {\r\n                return;\r\n            }\r\n\r\n            preview.children.forEach((child, index) => {\r\n                if (child && child.attrs && child.attrs.className && child.attrs.className.indexOf('Avatar') === 0) {\r\n                    preview.children.splice(index, 1, anonymousAvatar(this.attrs.post));\r\n                }\r\n            });\r\n        });\r\n    });\r\n\r\n    override(TerminalPost.prototype, 'view', function (original, ...args) {\r\n        const discussion = this.attrs.discussion;\r\n\r\n        if (this.attrs.lastPost && discussion.replyCount()) {\r\n            if (discussion.lastPostedUser()) {\r\n                return original(...args);\r\n            }\r\n\r\n            // Loading discussion.lastPost for the sole purpose of getting post.isAnonymous would be detrimental to performance\r\n            // Instead we'll replace all \"[deleted] replied\" texts with a generic message that doesn't include a username\r\n\r\n            return m('span', [\r\n                icon('fas fa-reply'),\r\n                ' ',\r\n                app.translator.trans('clarkwinkelmann-anonymous-posting.forum.discussionList.genericReplyText', {\r\n                    ago: humanTime(discussion.lastPostedAt()),\r\n                }),\r\n            ]);\r\n        }\r\n\r\n        if (!discussion.attribute('isAnonymous')) {\r\n            return original(...args);\r\n        }\r\n\r\n        return m('span', [\r\n            '', // Keep output the same as original method to maximise compatibility with other extensions\r\n            ' ',\r\n            app.translator.trans('core.forum.discussion_list.started_text', {\r\n                username: m('span.username', app.translator.trans('clarkwinkelmann-anonymous-posting.lib.userMeta.username')),\r\n                ago: humanTime(discussion.createdAt()),\r\n            }),\r\n        ]);\r\n    });\r\n\r\n    extend(CommentPost.prototype, 'oninit', function () {\r\n        this.subtree!.check(() => {\r\n            return this.attrs.post.attribute('isAnonymous');\r\n        });\r\n    });\r\n\r\n    extend(DiscussionComposer.prototype, 'oninit', extendComposerInit);\r\n    extend(DiscussionComposer.prototype, 'headerItems', extendComposerHeaderItems);\r\n    extend(DiscussionComposer.prototype, 'data', extendComposerData);\r\n    extend(DiscussionComposer.prototype, 'view', extendComposerView);\r\n    extend(ReplyComposer.prototype, 'oninit', extendComposerInit);\r\n    extend(ReplyComposer.prototype, 'headerItems', extendComposerHeaderItems);\r\n    extend(ReplyComposer.prototype, 'data', extendComposerData);\r\n    extend(ReplyComposer.prototype, 'view', extendComposerView);\r\n\r\n    extend(DiscussionControls, 'moderationControls', function (items, discussion) {\r\n        if (discussion.attribute('canDeAnonymize')) {\r\n            items.add('deanonymize', Button.component({\r\n                icon: 'fas fa-user-secret',\r\n                onclick: () => {\r\n                    if (!confirm(extractText(app.translator.trans('clarkwinkelmann-anonymous-posting.forum.discussionControls.deanonymizeConfirmation')))) {\r\n                        return;\r\n                    }\r\n\r\n                    discussion.save({\r\n                        isAnonymous: false,\r\n                    }).then(() => {\r\n                        m.redraw();\r\n                    });\r\n                },\r\n            }, app.translator.trans('clarkwinkelmann-anonymous-posting.forum.discussionControls.deanonymize')));\r\n        }\r\n\r\n        if (discussion.attribute('canAnonymize')) {\r\n            items.add('anonymize', Button.component({\r\n                icon: 'fas fa-user-secret',\r\n                onclick: () => {\r\n                    if (!confirm(extractText(app.translator.trans('clarkwinkelmann-anonymous-posting.forum.discussionControls.anonymizeConfirmation')))) {\r\n                        return;\r\n                    }\r\n\r\n                    discussion.save({\r\n                        isAnonymous: true,\r\n                    }).then(() => {\r\n                        m.redraw();\r\n                    });\r\n                },\r\n            }, app.translator.trans('clarkwinkelmann-anonymous-posting.forum.discussionControls.anonymize')));\r\n        }\r\n    });\r\n\r\n    extend(PostControls, 'moderationControls', function (items, post) {\r\n        if (post.attribute('canDeAnonymize')) {\r\n            items.add('deanonymize', Button.component({\r\n                icon: 'fas fa-user-secret',\r\n                onclick: () => {\r\n                    if (!confirm(extractText(app.translator.trans('clarkwinkelmann-anonymous-posting.forum.postControls.deanonymizeConfirmation')))) {\r\n                        return;\r\n                    }\r\n\r\n                    post.save({\r\n                        isAnonymous: false,\r\n                    }).then(() => {\r\n                        m.redraw();\r\n                    });\r\n                },\r\n            }, app.translator.trans('clarkwinkelmann-anonymous-posting.forum.postControls.deanonymize')));\r\n        }\r\n\r\n        if (post.attribute('canAnonymize')) {\r\n            items.add('anonymize', Button.component({\r\n                icon: 'fas fa-user-secret',\r\n                onclick: () => {\r\n                    if (post.number() === 1) {\r\n                        if (!confirm(extractText(app.translator.trans('clarkwinkelmann-anonymous-posting.forum.postControls.firstPostConfirmation')))) {\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    post.save({\r\n                        isAnonymous: true,\r\n                    }).then(() => {\r\n                        m.redraw();\r\n                    });\r\n                },\r\n            }, app.translator.trans('clarkwinkelmann-anonymous-posting.forum.postControls.anonymize')));\r\n        }\r\n    });\r\n\r\n    // Flarum will try to focus the checkbox in ReplyComposer instead of the body. To work around this, we'll temporarily disable the field while this method runs\r\n    override(Composer.prototype, 'focus', function (original) {\r\n        const $anonymousCheckbox = this.$('.item-anonymous-posting input');\r\n\r\n        $anonymousCheckbox.prop('disabled', true);\r\n\r\n        const returnValue = original();\r\n\r\n        $anonymousCheckbox.prop('disabled', false);\r\n\r\n        return returnValue;\r\n    });\r\n});\r\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","_extends","assign","bind","target","i","arguments","length","source","apply","this","flarum","core","compat","extendComposerInit","app","extendComposerHeaderItems","items","helpText","helpTextPosition","add","Switch","className","state","onchange","m","Tooltip","text","icon","extendComposerData","data","isAnonymous","extendComposerView","vdom","_this","Array","isArray","children","forEach","child","index","attrs","indexOf","composerType","ReplyComposer","anonymousAvatar","post","selectedTags","src","attribute","allTags","imageSrc","_step","composerTypeTags","_iterator","_createForOfIteratorHelperLoose","done","tag","attributes","name","foundMatchingTag","url","avatar_url","alt","username","style","charAt","toUpperCase","extend","CommentPost","_this2","setContent","Model","tooltipText","labelText","PostsUserPage","alteredPost","Post","relationships","user","anonymousUser","PostUser","cardVisible","oncardshow","redraw","oncardhide","ReplyPlaceholder","vdom0","vdom1","vdom2","vdom3","index3","splice","DiscussionListItem","discussion","ago","humanTime","createdAt","Link","PostPreview","_this3","preview","override","TerminalPost","original","_len","args","_key","lastPost","replyCount","lastPostedUser","lastPostedAt","_this4","subtree","check","DiscussionComposer","DiscussionControls","Button","onclick","confirm","extractText","save","then","PostControls","number","Composer","$anonymousCheckbox","$","returnValue"],"sourceRoot":""}